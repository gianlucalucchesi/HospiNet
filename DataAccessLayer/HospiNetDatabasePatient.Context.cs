//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HospiNetEntitiesPatient : DbContext
    {
        public HospiNetEntitiesPatient()
            : base("name=HospiNetEntitiesPatient")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Nullable<System.Guid>> usp_AddPatient(string firstName, string lastName, Nullable<System.DateTime> birthday)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("usp_AddPatient", firstNameParameter, lastNameParameter, birthdayParameter);
        }
    
        public virtual int usp_CancelAppointment(Nullable<int> appointmentId)
        {
            var appointmentIdParameter = appointmentId.HasValue ?
                new ObjectParameter("appointmentId", appointmentId) :
                new ObjectParameter("appointmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CancelAppointment", appointmentIdParameter);
        }
    
        public virtual ObjectResult<usp_GetAllPatients_Result> usp_GetAllPatients()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllPatients_Result>("usp_GetAllPatients");
        }
    
        public virtual ObjectResult<usp_GetAppointment_Result> usp_GetAppointment(Nullable<int> appointmentId)
        {
            var appointmentIdParameter = appointmentId.HasValue ?
                new ObjectParameter("appointmentId", appointmentId) :
                new ObjectParameter("appointmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAppointment_Result>("usp_GetAppointment", appointmentIdParameter);
        }
    
        public virtual int usp_UpdatePatient(Nullable<System.Guid> id, string firstName, string lastName, Nullable<System.DateTime> birthday)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdatePatient", idParameter, firstNameParameter, lastNameParameter, birthdayParameter);
        }
    }
}
